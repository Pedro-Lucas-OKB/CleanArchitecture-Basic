@model CleanArch.Application.ViewModels.ProductViewModel
@{
    ViewData["Title"] = $"Edit Product: {Model.Name}";
}

<div class="container">
    <div>
        <div class="col border-bottom" style="width:80%">
            <h1 class="display-6">@ViewData["Title"]</h1>
        </div>
    </div>

    <form asp-action="Edit">
        <div class="horizontal-form">
            <hr />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" number="type" value="@Model.Price"/>
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <hr />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </form>
    <div>
        <a asp-action="Index">Back to products list</a>
    </div>
</div>

@section Scripts {
    @{
        // Desativado intencionalmente
        //await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}